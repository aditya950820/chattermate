"""added new node type

Revision ID: dd0e5ceefe4b
Revises: 7fd0447b3d45
Create Date: 2025-07-18 12:33:17.762285

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dd0e5ceefe4b'
down_revision: Union[str, None] = '7fd0447b3d45'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Update the NodeType enum to include the new 'landing_page' type
    op.execute("ALTER TYPE nodetype ADD VALUE IF NOT EXISTS 'LANDING_PAGE'")
    
    # Add new columns for landing page node type
    op.add_column('workflow_nodes', sa.Column('landing_page_heading', sa.Text(), nullable=True))
    op.add_column('workflow_nodes', sa.Column('landing_page_content', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First drop the columns that use the enum
    op.drop_column('workflow_nodes', 'landing_page_content')
    op.drop_column('workflow_nodes', 'landing_page_heading')
    
    # Create a new enum without the landing_page value
    op.execute("""
        CREATE TYPE nodetype_new AS ENUM (
            'MESSAGE','LLM','CONDITION','FORM','ACTION','HUMAN_TRANSFER','WAIT','END'
        )
    """)
    
    # Update the column type to use the new enum
    op.execute("ALTER TABLE workflow_nodes ALTER COLUMN node_type TYPE nodetype_new USING node_type::text::nodetype_new")
    
    # Drop the old enum
    op.execute("DROP TYPE nodetype")
    
    # Rename the new enum to the original name
    op.execute("ALTER TYPE nodetype_new RENAME TO nodetype")
    
    # ### end Alembic commands ###
